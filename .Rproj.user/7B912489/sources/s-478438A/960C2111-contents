setwd("C:/Users/Xibo/Dropbox/academic/class/Econ615_2019fall/problem set")

# generate sample
x1 <- data.frame(brew = rep(c("AB", "MC", "BB"),each=25),market = rep(1:25,3))
x1$Local <-rep(0,nrow(x1))
x1$corporate <-rep(1,nrow(x1))
x1$corporate_sub <-rep(0,nrow(x1))
x1$alco <-c(rep(runif(1),25), rep(runif(1),25), rep(runif(1),25))
x1$bitter <-c(rep(runif(1),25), rep(runif(1),25), rep(runif(1),25))
x1$xi <-c(rep(rnorm(1),25), rep(rnorm(1),25), rep(rnorm(1),25))
x1$price_0 <-c(rep(runif(1),25), rep(runif(1),25), rep(runif(1),25))

x2 <- data.frame(brew = rep(c("AB2", "MC2"),each=25), market = rep(1:25,2))
x2$Local <-rep(0,nrow(x2))
x2$corporate <-rep(0,nrow(x2))
x2$corporate_sub <-rep(1,nrow(x2))
x2$alco <-c(rep(runif(1),25), rep(runif(1),25))
x2$bitter <-c(rep(runif(1),25), rep(runif(1),25))
x2$xi <-c(rep(rnorm(1),25), rep(rnorm(1),25))
x2$price_0 <-c(rep(runif(1),25), rep(runif(1),25))

x3 <- data.frame(brew = rep(c("3", "11", "15", "23"), each=25),
                 market = rep(1:25,4))
local3 <- c(rep(1,15),rep(0,10))
local11 <- rep(c(rep(1,3),0,0),5)
local15 <- rep(c(0,0, rep(1,3)),5)
local23 <- c(rep(0,10),rep(1,15))
x3$Local <-c(local3,local11,local15,local23)
x3$corporate <-rep(0,nrow(x3))
x3$corporate_sub <-rep(0,nrow(x3))
x3$alco <-c(rep(runif(1),25), rep(runif(1),25), rep(runif(1),25), rep(runif(1),25))
x3$bitter <-c(rep(runif(1),25), rep(runif(1),25), rep(runif(1),25), rep(runif(1),25))
x3$xi <-c(rep(rnorm(1),25), rep(rnorm(1),25), rep(rnorm(1),25), rep(rnorm(1),25))
x3$price_0 <-c(rep(runif(1),25), rep(runif(1),25), rep(runif(1),25), rep(runif(1),25))

x4 <- data.frame(brew = rep("0", each=25),
                 market = 1:25)
x4$Local <-rep(0,nrow(x4))
x4$corporate <-rep(0,nrow(x4))
x4$corporate_sub <-rep(0,nrow(x4))
x4$alco <- rep(0,25)
x4$bitter <- rep(0,25)
x4$xi <- rep(0,25)
x4$price_0 <- rep(0,25)

sample <- rbind(x1,x2,x3)
sample <- rbind(sample,x4)
sample <- sample[order(sample$market, sample$brew),]

# rule out the unpausible options
sample<-sample[!(sample$Local==0 & sample$corporate==0
                 & sample$corporate_sub==0 & sample$brew!="0"),]

# gen product characteristics
x <- cbind(sample$Local,sample$corporate,sample$corporate_sub,sample$alco,
           sample$bitter,sample$xi)
colnames(x) <- c("Local", "corporate", "corporate_sub", "alco", "bitter",
                      "xi")
# costs
sample$w_jt <- rnorm(nrow(sample))
omega_jt <- rnorm(nrow(sample))
gamma <- ifelse(sample$Local==1,1,0.85)
gamma[sample$brew == "0"] <- 0
sample$cost <- gamma*exp(sample$w_jt)*exp(omega_jt)

# generate delta
delta <-matrix(ncol=9, nrow=25)
for(i in c(2,4,6)){
  delta[,i] <-rep(0.8, 25)
}
for(i in c(5,7,8,9)){
  delta[,i] <-rep(1, 25)
}
for(i in c(1,3)){
  delta[,i] <-rep(1.25-0.25*(i-1), 25)
}
colnames(delta) <- c("beta_10", "beta_11", "beta_20", "beta_21", "beta_30",
                 "beta_31", "beta_4", "beta_5", "alpha")

num<-data.frame(table(sample$market))
colnames(num) <- c("market","count")
delta <- cbind(num,delta)

library(reshape)
delta<- untable(delta[,c(1,3,4,5,6,7,8,9,10,11)], num=delta[,2])
  
# generate v_it
v <- array(rnorm(750), dim=c(25,3,10))
v<- cbind(num,v)
v<- untable(v[,c(1,3:32)], num=v[,2])

beta_ram <- v[,c(2,3,4)] * delta[,c(3,5,7)] + delta[,c(2,4,6)]
for(i in 2:10){
  j<-i*3
  beta_ram <- cbind(beta_ram,v[,c(j-1,j,j+1)] * delta[,c(3,5,7)] + delta[,c(2,4,6)])
}


# firm
sample$firm[sample$brew=="AB" | sample$brew=="AB2"] <-"AB"
sample$firm[sample$brew=="MC" | sample$brew=="MC2"] <-"MC"
sample$firm[sample$brew=="BB"] <-"BB"
sample$firm[sample$brew=="0"] <-"0"
sample$firm[sample$brew=="3"] <-"3"
sample$firm[sample$brew=="11"] <-"11"
sample$firm[sample$brew=="15"] <-"15"
sample$firm[sample$brew=="23"] <-"23"
firmAB<-ifelse(sample$firm=="AB", 1, 0)
firmMC<-ifelse(sample$firm=="MC", 1, 0)
firmBB<-ifelse(sample$firm=="BB", 1, 0)
firm0<-ifelse(sample$firm=="0", 1, 0)
firm3<-ifelse(sample$firm=="3", 1, 0)
firm11<-ifelse(sample$firm=="11", 1, 0)
firm15<-ifelse(sample$firm=="15", 1, 0)
firm23<-ifelse(sample$firm=="23", 1, 0)
own_pre <- cbind(firmAB, firmMC,firmBB,firm3, firm11, firm15, firm23, firm0)

# price function
price_func <- function(price){
  old.price <- price
  repeat {  
    u <- exp(rowSums(beta_ram[,c(1,2,3)]* x[,c(1,2,3)]) + rowSums(delta[,c(8,9)]* x[,c(4,5)]) -
               delta[,c(10)]* old.price + x[,c(6)])
    for(i in 2:10){
      j<-i*3
         u <- cbind(u,exp(rowSums(beta_ram[,c(j-2,j-1,j)]* x[,c(1,2,3)]) + rowSums(delta[,c(8,9)]* x[,c(4,5)])- 
                            delta[,c(10)]* old.price + x[,c(6)]))
    } 
    u <- cbind(delta[c(1)],u)
    colnames(u)<- c("market", "V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8", "V9", "V10")

    tot<- matrix(NA,ncol=1,nrow=nrow(sample))
    u<- cbind(u,tot)
    u1<- within(u, {u[,c(12)] = ave(u[,c(2)], market, FUN = sum)})[,c(13)][,c(12)]

    for(i in 2:10){
        u1<- cbind(u1,within(u, {u[,c(12)] = ave(u[,c(i+1)], market, FUN = sum)})[,c(13)][,c(12)])
    }
    u<-u[,-c(1,12)]
    share<- u/u1
    sharetot <- 1/10*rowSums(share)
    new.price <- numeric(length(sample$market))
    
    for (i in 1:25) {
      mkt_ind <- sample$market == i
      cost_i <- sample$cost[ mkt_ind ]
      share_i <- sharetot[ mkt_ind ]
      derivative <- share_i %*% t(share_i)
      d_i<- derivative - diag(share_i)
      own_pre_i <- own_pre[ mkt_ind, ]
      own_prod_pre_i <- own_pre_i %*% t(own_pre_i) # if element (i,j) equals 1, that means that prod i and j are produced by same firm
      new.price[ mkt_ind ]  <- cost_i + solve(t(d_i) * own_prod_pre_i)%*% share_i
    }    
  
    # Compute relative error as a 2-norm.
    conv <- sum((new.price - old.price)^2)
    # Exit test
    if(conv < 1e-10) break
    # Save iteration result
    old.price <- new.price }
  return(new.price)
}
price_eq<-price_func(sample$price_0)

## equilibrium market share
u <- exp(rowSums(beta_ram[,c(1,2,3)]* x[,c(1,2,3)]) + rowSums(delta[,c(8,9)]* x[,c(4,5)]) - delta[,c(10)]* price_eq + x[,c(6)])
for(i in 2:10){
  j<-i*3
  u <- cbind(u,exp(rowSums(beta_ram[,c(j-2,j-1,j)]* x[,c(1,2,3)]) + rowSums(delta[,c(8,9)]* x[,c(4,5)])-delta[,c(10)]* price_eq  + x[,c(6)]))
} 
u <- cbind(delta[c(1)],u)
colnames(u)<- c("market", "V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8", "V9", "V10")

tot<- matrix(NA,ncol=1,nrow=nrow(sample))
u<- cbind(u,tot)
u1<- within(u, {u[,c(12)] = ave(u[,c(2)], market, FUN = sum)})[,c(13)][,c(12)]

for(i in 2:10){
  u1<- cbind(u1,within(u, {u[,c(12)] = ave(u[,c(i+1)], market, FUN = sum)})[,c(13)][,c(12)])
}
u<-u[,-c(1,12)]
share<- u/u1
sample$sharetot <- 1/10*rowSums(share)
sample$price <- price_eq




## 2SLS regression
# group share
sample$group[sample$Local == 1] <-1
sample$group[sample$corporate == 1] <-2
sample$group[sample$corporate_sub == 1] <-2
sample$group[sample$brew == "0"] <-3
for(i in 1:25){
sample$subgroup[sample$group==1 & sample$market== i] <-100*i+1
sample$subgroup[sample$group==2 & sample$market== i] <-100*i+2
sample$subgroup[sample$group==3 & sample$market== i] <-100*i+3
}

sample<- within(sample, {gshare = ave(sample[,c(12)], c(subgroup), FUN = sum)})
sample$gsh <-sample$share/sample$gshare

# outside share
sample <- within(sample, {oshare = ave(sample[,c(12)], c(market), FUN = min)})
sample$dshare <- sample$share - sample$oshare


# Instrument
library(dummies)

sample <- cbind(sample, own_pre)


# construct instruments
nobs <- nrow(sample)
IV <- data.frame(sample$w_jt,sample$cost)

sum_rival <- matrix(NA, nobs, ncol(IV))

for (i in 1:nobs) {
  rival_ind <- sample$firm != sample$firm[i] & sample$market == sample$market[i]
  sum_rival[i, ] <- colSums(IV[rival_ind == 1, ])
}
colnames(sum_rival) <- paste0("IV", 1:2)

sample <- cbind(sample,sum_rival,sum_other)

#2sls
tsls1<-lm(sample$price~sample$IV1)
summary(tsls1)
sample$price.hat <-fitted.values(tsls1)

tsls2<-lm(sample$gsh~sample$IV2)
summary(tsls2)
sample$gsh.hat <-fitted.values(tsls2)

result_2sls <- lm(dshare ~ Local + corporate + corporate_sub + alco + bitter + xi + price.hat + gsh.hat, sample)
summary(result_2sls)

## derivatives of sjt
alpha_new <- result_2sls$coefficients["price.hat"]
derivative <- alpha_new * sample$sharetot %*% t(sample$sharetot)
matrix0 <- diag(nrow(sample))
diag(matrix0) <- alpha_new * sample$sharetot
d1<-derivative - matrix0

## post-buyout



