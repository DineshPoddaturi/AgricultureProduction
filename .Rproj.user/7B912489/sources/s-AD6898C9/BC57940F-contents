library(tidyverse)
library(readxl)
library(lubridate)


######### In this project I use publicly available data to visualize the trends in food production, 
######### food consumption, food expenditure, and other items I add as I get data. I am interested in food expenditure
#########  by category. For instance does expenditure on sweet/salty products went up over time.... Or how peoples diets
#########  also effect the consumption and expenditure of certain products. This is myu initial thought process. I develop
######## or add new things as I get more ideas.

####### This is not a causal or any kind of work. For now this is purely data and data visualization project. 



######################################################################################################################################
################################################### FOOD SALES #######################################################################
######################################################################################################################################

##### The following has data of food sales in the United States in dollar terms. The sales are further divided
##### into Food at Home (FAH), Food Away From Home (FAFH) and are in both nominal and constant dollars.
##### The data are in million dollars.
foodSales_monthly <- read_excel("Data/FoodExpenditures/monthly_sales_TaxesTips.xlsx") %>% as.data.frame()
foodSales_monthly <- foodSales_monthly[-(1:4),]
names(foodSales_monthly) <- c("Year", "Month", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
                              "FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)", 
                              "TotalSales_ConstantDollar(1988=100)")
# First we check the class type of the data. If they are of not the correct type, we convert them to 
# the data type we want.
sapply(foodSales_monthly, class)

cols.num <- c("Year", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
              "FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)", 
              "TotalSales_ConstantDollar(1988=100)")

foodSales_monthly[cols.num] <- sapply(foodSales_monthly[cols.num],as.numeric)

rownames(foodSales_monthly) <- 1:nrow(foodSales_monthly)


######################################################################################################################################
################################################### FOOD Expenditures ################################################################
######################################################################################################################################
foodSales_Exp_Nominal <- read_excel("Data/FoodExpenditures/Nominal_Food_Alcohol_Expenditures_TaxesTips.xlsx") %>% as.data.frame()

foodSales_Exp_Nominal_No_TaxTip <- read_excel("Data/FoodExpenditures/Nominal_FoodAcohol_Expenditure_No_TaxesTips.xlsx") %>% as.data.frame()


#### For constant dollar series the expenditure is normalized as [Millions of dollars (1988=100)]
foodSales_Exp_ConstantDollar <- read_excel("Data/FoodExpenditures/Constant_Food_Alcohol_Expenditures_TaxesTips.xlsx") %>% as.data.frame()

foodSales_Exp_ConstantDollar_No_TaxTip <- read_excel("Data/FoodExpenditures/Constant_FoodAcohol_Expenditure_No_TaxesTips.xlsx") %>% as.data.frame()

#### This following is by the final purchaser. This includes both nominal and constant dollar measurement
foodSales_Exp_FinalPurchaser <- read_excel("Data/FoodExpenditures/food_expenditures_final_purchaser.xlsx") %>% as.data.frame()







######################################################################################################################################
################################################### FOOD Availability ################################################################
######################################################################################################################################

################################################## Dairy #################################################################

#### With the following code we can read all the sheets in the excel file. 
path <- "Data/FoodAvailabilityData/DairyProducts.xlsx"
allDairyAvailability<- lapply(excel_sheets(path), read_excel, path = path)

allDairy <- allDairyAvailability[[2]]


#### All the data are measured in pounds. So the supply and disappearence numbers are in million pounds
#### The percapita numbers are in pounds.

cheese_tot <- allDairyAvailability[[4]] %>% as.data.frame()
names(cheese_tot) <- c("Year", "U.S.Populatin_million", "Production", "Imports", "BeginingStocks",
                       "TotalSupply", "Exports", "Ship_U.S_Territories", "EndingStocks",
                       "FoodAvail_USDA_Donations", "FoodAvail_Total_Not_Including_USDA_donations",
                       "FoodAvail_Total_Including_USDA_donations", "Percapita")
cheese_tot <- cheese_tot[-(1:6),]
cheese_tot <- cheese_tot %>% as.numeric()
cheese_tot <- sapply(cheese_tot, as.numeric) 
cheese_tot <- round(cheese_tot,4) %>% as.data.frame()


cheese_tot <- allDairyAvailability[[4]] %>% as.data.frame()
names(cheese_tot) <- c("Year", "U.S.Populatin_million", "Production", "Imports", "BeginingStocks",
                       "TotalSupply", "Exports", "Ship_U.S_Territories", "EndingStocks",
                       "FoodAvail_USDA_Donations", "FoodAvail_Total_Not_Including_USDA_donations",
                       "FoodAvail_Total_Including_USDA_donations", "Percapita")
cheese_tot <- cheese_tot[-(1:6),]
cheese_tot <- cheese_tot %>% as.numeric()
cheese_tot <- sapply(cheese_tot, as.numeric) 
cheese_tot <- round(cheese_tot,4) %>% as.data.frame()


cheese_percap_1 <- allDairyAvailability[[7]] %>% as.data.frame()
cheese_percap_1 <- cheese_percap_1[-(1:4),]
names(cheese_percap_1) <- c("Year", "U.S.Pop_million", "Cheddar_USA_Type", "Other_USA_Type",
                            "Total_USA_Type", "Provolone_Itl_Type", "Romano_Itl_Type", "Parmesan_Itl_Type", 
                            "Mozzarella_Itl_Type","Ricotta_Itl_Type", "Other_Itl_Type", "Total_Itl_Type", 
                            "Swiss", "Brick", "Muenster", "Cream_Neufchatel",
                            "Blue", "Hispanic", "Other", "Total", "ConsumedAs_Nat_Cheese", "ConsumedAs_Processed_Cheese",
                            "Consumed_Total", "NA","Processed_Cheese", "FoodSpreads_Cheese", "Total_Processed_Cheese",
                            "CheeseContant")

cheese_percap_1 <- sapply(cheese_percap_1, as.numeric) %>% as.data.frame()
cheese_percap_1 <- round(cheese_percap_1,4) %>% select(-"NA")
cheese_percap_1 <- cheese_percap_1 %>% filter(Year<=1994)

cheese_percap_2 <- allDairyAvailability[[8]] %>% as.data.frame()
cheese_percap_2 <- cheese_percap_2[-(1:4),]
names(cheese_percap_2) <- c("Year", "U.S.Pop_million", "Cheddar_USA_Type", "Other_USA_Type",
                            "Total_USA_Type", "Mozzarella_Itl_Type", "Other_Itl_Type", "Total_Itl_Type", 
                            "Swiss", "Brick", "Muenster", "Cream_Neufchatel","Blue", "Hispanic", "Other", 
                            "Total", "Total_OtherThan_American_NonCowCheese(Excl)", "Imported_Cheese_NotCows",
                            "Nat_Cheese_Total", "NA","Processed_Cheese", "FoodSpreads_Cheese", 
                            "Total_Processed_Cheese")
cheese_percap_2 <- sapply(cheese_percap_2, as.numeric) %>% as.data.frame()
cheese_percap_2 <- round(cheese_percap_2,4) %>% select(-"NA")
cheese_percap_2 <- cheese_percap_2 %>% filter(Year<=2019)


cheese_percap_1 <- cheese_percap_1 %>% mutate(
  Other_Itl_Type = Provolone_Itl_Type + Romano_Itl_Type + Parmesan_Itl_Type + Ricotta_Itl_Type + Other_Itl_Type) %>% 
  select(-Provolone_Itl_Type, - Romano_Itl_Type, - Parmesan_Itl_Type, - Ricotta_Itl_Type)

##### cheese_percap contains all the available cheese per capita in the U.S.
cheese_percap <- bind_rows(cheese_percap_1, cheese_percap_2)





### Frozen dairy products availability total and per capita. IC = Ice Cream, PCC = Per Capita, Tot = Total
### Totals are in million pounds. per capitas are in pounds

frozenDairy <- allDairyAvailability[[12]] %>% as.data.frame()

frozenDairy <- frozenDairy[-(1:5),]
names(frozenDairy) <- c("Year", "U.S.Pop_million", "RegIC_Tot", "RegIC_PCC",
                        "LowFatIC_Tot", "LowFatIC_PCC", "NonFatIC_Tot", "NonFatIC_PCC",
                        "Sherbet_Tot", "Sherbet_PCC", "MellorineMix_Total", "MellorineMix_PCC",
                        "FroYo_Tot", "FroYo_PCC", "WaterJuice_Tot", "WaterJuice_PCC", "Other_Tot",
                        "Other_PCC", "TotFrozenDairy_Tot", "TotFrozenDairy_PCC", "NA", "NA1")

frozenDairy <- sapply(frozenDairy, as.numeric) %>% as.data.frame()
frozenDairy <- round(frozenDairy,4) %>% select(-"NA", -"NA1", -"WaterJuice_Tot", -"WaterJuice_PCC")



################################################## MEAT #################################################################

#### With the following code we can read all the sheets in the excel file. 
meatPath <- "Data/FoodAvailabilityData/RedMeatPoultryFish.xlsx"
allmeatAvailability<- lapply(excel_sheets(meatPath), read_excel, path = meatPath)


#### The data are for per capita and are in pounds(carcass weight)

meatCarcass <- allmeatAvailability[[2]] %>% as.data.frame()
names(meatCarcass) <- c("Year", "U.S.Pop_million", "Beef_PCC", "Veal_PCC", "Pork_PCC", "Lamb_PCC", "Total_RedMeat",
                        "Chicken_PCC", "Turkey_PCC", "Total_Poultry", "Total_Meat_PCC")
meatCarcass <- meatCarcass[-(1:5),]

meatCarcass <- sapply(meatCarcass, as.numeric) %>% as.data.frame()
meatCarcass <- round(meatCarcass,4)


#### The data are for per capita and are in pounds(retail weight)
meatRetail <- allmeatAvailability[[3]] %>% as.data.frame()
names(meatRetail) <- c("Year", "U.S.Pop_million", "Beef_PCC", "Veal_PCC", "Pork_PCC", "Lamb_PCC", "Total_RedMeat",
                        "YoungChicken_PCC", "OtherChicken_PCC", "Total_Chicken")
meatRetail <- meatRetail[-(1:5),]

meatRetail <- sapply(meatRetail, as.numeric) %>% as.data.frame()
meatRetail <- round(meatRetail,4)



#### The data are for per capita and are in pounds(Boneless weight)
meatBoneless <- allmeatAvailability[[4]] %>% as.data.frame()
names(meatBoneless) <- c("Year", "U.S.Pop_million", "Beef_PCC", "Veal_PCC", "Pork_PCC", "Lamb_PCC", "Total_RedMeat",
                       "Chicken_PCC", "Turkey_PCC", "Total_Poultry", "Fish_ShellFish_PCC", "Total_Meat_PCC")
meatBoneless <- meatBoneless[-(1:5),]

meatBoneless <- sapply(meatBoneless, as.numeric) %>% as.data.frame()
meatBoneless <- round(meatBoneless,4)

#### Leading Meat(Boneless weight)
meatLeading <- allmeatAvailability[[5]] %>% as.data.frame()
names(meatLeading) <- c("Year", "U.S.Pop_million", "Beef_PCC", "Pork_PCC",
                         "Chicken_PCC", "Total_LeadingMeat_PCC")
meatLeading <- meatLeading[-(1:5),]

meatLeading <- sapply(meatLeading, as.numeric) %>% as.data.frame()
meatLeading <- round(meatLeading,4) %>% filter(Year<=2019)


####################################################################################################################################









