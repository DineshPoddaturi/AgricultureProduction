library(tidyverse)
library(readxl)
library(lubridate)
getwd()
read_excel("Data/FoodExpenditures/monthly_sales_TaxesTips.xlsx") %>% as.data.frame()
library(tidyverse)
library(readxl)
library(lubridate)
foodSales_monthly <- read_excel("Data/FoodExpenditures/monthly_sales_TaxesTips.xlsx") %>% as.data.frame()
foodSales_monthly
names(foodSales_monthly)
foodSales_monthly %>% glimpse()
foodSales_monthly %>% head()
foodSales_monthly
foodSales_monthly[:2]
foodSales_monthly[-4,]
foodSales_monthly
foodSales_monthly %>% head()
foodSales_monthly[-(1:4),] %>% head()
foodSales_monthly <- foodSales_monthly[-(1:4),] %>% head()
foodSales_monthly
names(foodSales_monthly) <- c("Year", "Month", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
foodSales_monthly
foodSales_monthly <- read_excel("Data/FoodExpenditures/monthly_sales_TaxesTips.xlsx") %>% as.data.frame()
foodSales_monthly <- foodSales_monthly[-(1:4),]
names(foodSales_monthly) <- c("Year", "Month", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
foodSales_monthly
foodSales_monthly %>% glimpse()
#### I am rounding the numbers to 4 decimals. This is just a personal preference for me. It makes it easy to work with
#### data.
foodSales_monthly <- foodSales_monthly %>% as.numeric()
#### I am rounding the numbers to 4 decimals. This is just a personal preference for me. It makes it easy to work with
#### data.
sapply(foodSales_monthly, class)
foodSales_monthly[-"Month"]
foodSales_monthly[("Month")]
foodSales_monthly[("Month")]
foodSales_monthly[-("Month")]
foodSales_monthly[cols.num]
cols.num <- c("Year", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
foodSales_monthly[cols.num]
foodSales_monthly_temp <- foodSales_monthly %>% select(-Year) %>% as.numeric()
foodSales_monthly %>% select(-Year)
foodSales_monthly[cols.num] <- sapply(foodSales_monthly[cols.num],as.numeric)
foodSales_monthly
foodSales_monthly %>% tail()
foodSales_monthly <- read_excel("Data/FoodExpenditures/monthly_sales_TaxesTips.xlsx") %>% as.data.frame()
foodSales_monthly <- foodSales_monthly[-(1:4),]
names(foodSales_monthly) <- c("Year", "Month", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
foodSales_monthly %>% tail()
foodSales_monthly[-294,] %>% tail()
foodSales_monthly[-(294:296),] %>% tail()
foodSales_monthly <- read_excel("Data/FoodExpenditures/monthly_sales_TaxesTips.xlsx") %>% as.data.frame()
foodSales_monthly <- foodSales_monthly[-(1:4),]
names(foodSales_monthly) <- c("Year", "Month", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
foodSales_monthly[-(294:296),]
foodSales_monthly[-(294:296),] %>% tail()
foodSales_monthly <- read_excel("Data/FoodExpenditures/monthly_sales_TaxesTips.xlsx") %>% as.data.frame()
foodSales_monthly <- foodSales_monthly[-(1:4),]
names(foodSales_monthly) <- c("Year", "Month", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
foodSales_monthly %>% tail()
#### I am rounding the numbers to 4 decimals. This is just a personal preference for me. It makes it easy to work with
#### data.
# First we check the class type of the data. If they are of not the correct type, we convert them to
# the data type we want
sapply(foodSales_monthly, class)
cols.num <- c("Year", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
foodSales_monthly[cols.num] <- sapply(foodSales_monthly[cols.num],as.numeric)
foodSales_monthly %>% tail()
foodSales_monthly
######################################################################################################################################
################################################### FOOD SALES #######################################################################
######################################################################################################################################
foodSales_monthly <- read_excel("Data/FoodExpenditures/Nominal_Food_Alcohol_Expenditures_TaxesTips.xlsx") %>% as.data.frame()
foodSales_monthly
##### The following has data of food sales in the United States in dollar terms. The sales are further divided
##### into Food at Home (FAH), Food Away From Home (FAFH) and are in both nominal and constant dollars.
##### The data are in million dollars.
foodSales_monthly <- read_excel("Data/FoodExpenditures/monthly_sales_TaxesTips.xlsx") %>% as.data.frame()
foodSales_monthly <- foodSales_monthly[-(1:4),]
names(foodSales_monthly) <- c("Year", "Month", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
# First we check the class type of the data. If they are of not the correct type, we convert them to
# the data type we want.
sapply(foodSales_monthly, class)
cols.num <- c("Year", "FAH_Nominal", "FAFH_Nominal", "TotalSales_Nominal",
"FAH_ConstantDollar(1988=100)", "FAFH_ConstantDollar(1988=100)",
"TotalSales_ConstantDollar(1988=100)")
foodSales_monthly[cols.num] <- sapply(foodSales_monthly[cols.num],as.numeric)
foodSales_monthly
######################################################################################################################################
################################################### FOOD Expenditures ################################################################
######################################################################################################################################
foodSales_Exp_Nominal <- read_excel("Data/FoodExpenditures/Nominal_Food_Alcohol_Expenditures_TaxesTips.xlsx") %>% as.data.frame()
foodSales_Exp_Nominal%>% glimpse()
foodSales_Exp_Nominal_No_TaxTip <- read_excel("Data/FoodExpenditures/Nominal_Food_Alcohol_Expenditures_No_TaxesTips.xlsx") %>% as.data.frame()
foodSales_Exp_Nominal_No_TaxTip <- read_excel("Data/FoodExpenditures/Nominal_FoodAlcohol_Expenditure_No_TaxesTips.xlsx") %>% as.data.frame()
read_excel("Data/FoodExpenditures/Nominal_FoodAlcohol_Expenditure_No_TaxesTips.xlsx")
getwd
getwd()
######################################################################################################################################
################################################### FOOD Expenditures ################################################################
######################################################################################################################################
foodSales_Exp_Nominal <- read_excel("Data/FoodExpenditures/Nominal_Food_Alcohol_Expenditures_TaxesTips.xlsx") %>% as.data.frame()
foodSales_Exp_Nominal_No_TaxTip <- read_excel("Data/FoodExpenditures/Nominal_FoodAcohol_Expenditure_No_TaxesTips.xlsx") %>% as.data.frame()
foodSales_Exp_Nominal_No_TaxTip
Nominal_FoodAcohol_Expenditure_No_TaxesTips %>% glimpse()
foodSales_Exp_Nominal_No_TaxTip %>% glimpse()
#### For constant dollar series the expenditure is normalized as [Millions of dollars (1988=100)]
foodSales_Exp_ConstantDollar <- read_excel("Data/FoodExpenditures/Constant_Food_Alcohol_Expenditures_TaxesTips.xlsx") %>% as.data.frame()
foodSales_Exp_ConstantDollar_No_TaxTip <- read_excel("Data/FoodExpenditures/Constant_FoodAcohol_Expenditure_No_TaxesTips.xlsx") %>% as.data.frame()
foodSales_Exp_ConstantDollar
foodSales_Exp_ConstantDollar_No_TaxTip
#### This following is by the final purchaser
foodSales_Exp_FinalPurchaser <- read_excel("Data/FoodExpenditures/food_expenditures_final_purchaser.xlsx") %>% as.data.frame()
foodSales_Exp_FinalPurchaser
path <- readxl_example("Data/FoodAvailabilityData/DairyProducts.xlsx")
readxl_example("Data/FoodAvailabilityData/DairyProducts.xlsx")
excel_sheets(readxl_example("Data/FoodAvailabilityData/DairyProducts.xlsx"))
excel_sheets(readxl_example("DairyProducts.xlsx"))
path <- read_excel("Data/FoodAvailabilityData/DairyProducts.xlsx")
path
lapply(excel_sheets(path), read_excel, path = path)
path <- "Data/FoodAvailabilityData/DairyProducts.xlsx"
lapply(excel_sheets(path), read_excel, path = path)
#### With the following code we can read all the sheets in the excel file.
path <- "Data/FoodAvailabilityData/DairyProducts.xlsx"
allDairyAvailability<- lapply(excel_sheets(path), read_excel, path = path)
