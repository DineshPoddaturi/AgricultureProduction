foodSales_Exp_Monthly <- read_excel("Data/FoodExpenditures/MonthlySales_TaxesTips.xlsx") %>% as.data.frame()
names(foodSales_Exp_Monthly) <- c("Year", "Month", "FAH_NOM", "FAFH_NOM", "TOT_NOM",
"FAH_CONS", "FAFH_CONS", "TOT_CONS")
foodSales_Exp_Monthly
foodSales_Exp_Monthly <- foodSales_Exp_Nominal_Monthly[-(1:4),]
foodSales_Exp_Monthly
foodSales_Exp_Monthly <- read_excel("Data/FoodExpenditures/MonthlySales_TaxesTips.xlsx") %>% as.data.frame()
names(foodSales_Exp_Monthly) <- c("Year", "Month", "FAH_NOM", "FAFH_NOM", "TOT_NOM",
"FAH_CONS", "FAFH_CONS", "TOT_CONS")
foodSales_Exp_Monthly <- foodSales_Exp_Monthly[-(1:4),]
foodSales_Exp_Monthly
sapply(foodSales_Exp_Monthly %>% select(-Month), as.numeric) %>% as.data.frame()
sapply(foodSales_Exp_Monthly, as.numeric) %>% as.data.frame()
foodSales_Exp_Monthly_NOM <- sapply(foodSales_Exp_Monthly %>%
select(Year, FAH_NOM, FAFH_NOM), as.numeric) %>% as.data.frame()
foodSales_Exp_Monthly_NOM
foodSales_Exp_Monthly_NOM <- foodSales_Exp_Monthly_NOM %>% transmute(Year = Year, Month = foodSales_Exp_Monthly$Month,
FAH = FAH_NOM, FAFH = FAFH_NOM)
foodSales_Exp_Monthly_NOM
foodSales_Exp_Monthly_NOM_FAH <- foodSales_Exp_Monthly_NOM %>% filter(-FAFH)
foodSales_Exp_Monthly_NOM_FAFH <- foodSales_Exp_Monthly_NOM %>% filter(-FAH)
foodSales_Exp_Monthly_NOM_FAH <- foodSales_Exp_Monthly_NOM %>% select(-FAFH)
foodSales_Exp_Monthly_NOM_FAFH <- foodSales_Exp_Monthly_NOM %>% select(-FAH)
foodSales_Exp_Monthly_NOM_FAH
foodSales_Exp_Monthly_NOM_FAFH
sort(foodSales_Exp_Monthly_NOM_FAH$Year)
foodSales_Exp_Monthly_NOM_FAH %>% ggplot(aes(x=Year, y=FAH, color = Month)) + geom_line()
foodSales_Exp_Monthly_NOM_FAFH %>% ggplot(aes(x=Year, y=FAH, color = Month)) + geom_line()
foodSales_Exp_Monthly_NOM_FAFH %>% ggplot(aes(x=Year, y=FAFH, color = Month)) + geom_line()
foodSales_Exp_Monthly_NOM_FAH_plot <- foodSales_Exp_Monthly_NOM_FAH %>%
ggplot(aes(x=Year, y=FAH, color = Month)) + geom_line()
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_plot + geom_point(size=2) + transition_reveal(Year)
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme_light(base_size = 16)
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Expenditure, label=Month))+
labs(x="Year", y="Million dollars")+
ggtitle(paste0("Food At Home expenditure in the U.S. by month"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- animate(foodSales_Exp_Monthly_NOM_FAH_animated_plot,
height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("FAH-Expenditure_Month.gif"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=FAH, label=Month))+
labs(x="Year", y="Million dollars")+
ggtitle(paste0("Food At Home expenditure in the U.S. by month"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- animate(foodSales_Exp_Monthly_NOM_FAH_animated_plot,
height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("FAH-Expenditure_Month.gif"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_plot + geom_point(size=2) + transition_reveal(Year)
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme_light(base_size = 16)
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=FAH, label=Month))+
labs(x="Year", y="Million dollars")+
ggtitle(paste0("Food At Home expenditure in the U.S. by month"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- animate(foodSales_Exp_Monthly_NOM_FAH_animated_plot,
height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("FAH-Expenditure_Month.gif"))
foodSales_Exp_Monthly_NOM_FAFH_plot <- foodSales_Exp_Monthly_NOM_FAFH %>%
ggplot(aes(x=Year, y=FAFH, color = Month)) + geom_line()
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- foodSales_Exp_Monthly_NOM_FAFH_plot + geom_point(size=2) + transition_reveal(Year)
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- foodSales_Exp_Monthly_NOM_FAFH_animated_plot + theme_light(base_size = 16)
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- foodSales_Exp_Monthly_NOM_FAFH_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- foodSales_Exp_Monthly_NOM_FAFH_animated_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=FAFH, label=Month))+
labs(x="Year", y="Million dollars")+
ggtitle(paste0("Food Away From Home expenditure in the U.S. by month"))
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- animate(foodSales_Exp_Monthly_NOM_FAFH_animated_plot,
height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("FAH-Expenditure_Month.gif"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- animate(foodSales_Exp_Monthly_NOM_FAH_animated_plot,
height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("FAH-Expenditure_Month.gif"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- animate(foodSales_Exp_Monthly_NOM_FAH_animated_plot,
height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("FAH-Expenditure_Month.gif"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_plot + geom_point(size=2) + transition_reveal(Year)
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme_light(base_size = 16)
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- foodSales_Exp_Monthly_NOM_FAH_animated_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=FAH, label=Month))+
labs(x="Year", y="Million dollars")+
ggtitle(paste0("Food At Home expenditure in the U.S. by month"))
foodSales_Exp_Monthly_NOM_FAH_animated_plot <- animate(foodSales_Exp_Monthly_NOM_FAH_animated_plot,
height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("FAH-Expenditure_Month.gif"))
foodSales_Exp_Monthly_NOM_FAFH_plot <- foodSales_Exp_Monthly_NOM_FAFH %>%
ggplot(aes(x=Year, y=FAFH, color = Month)) + geom_line()
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- foodSales_Exp_Monthly_NOM_FAFH_plot + geom_point(size=2) + transition_reveal(Year)
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- foodSales_Exp_Monthly_NOM_FAFH_animated_plot + theme_light(base_size = 16)
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- foodSales_Exp_Monthly_NOM_FAFH_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- foodSales_Exp_Monthly_NOM_FAFH_animated_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=FAFH, label=Month))+
labs(x="Year", y="Million dollars")+
ggtitle(paste0("Food Away From Home expenditure in the U.S. by month"))
foodSales_Exp_Monthly_NOM_FAFH_animated_plot <- animate(foodSales_Exp_Monthly_NOM_FAFH_animated_plot,
height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("FAFH-Expenditure_Month.gif"))
require(tidyverse)
require(truncnorm)
require(nloptr)
require(optimx)
nodes <- function(xmin, xmax, n){
x <- NA
for (i in 1:n){
x[i] <- ((xmin + xmax)/2) + ((xmax - xmin)/2) *  cos( ((n-i+0.5)/n) * pi       )
}
return(x)
}
chebychevMatrix <- function(x,xmin,xmax,n){
z <- (2 * (x - xmin )/(xmax - xmin)) - 1
mat <- matrix(data=0, nrow = length(z), ncol = n)
for(i in 1:n){
mat[,1] <- 1
mat[,2] <- z
if(i >=3){
mat[,i] <- 2 * z * mat[,i-1] - mat[,i-2]
}
}
return(mat)
}
valueFunction <- function(st,xt){
x_node <- st + z * r * st * (1 - (st/K))
v_pr <- t(z_probs) %*% chebychevMatrix(x = x_node, xmin = x_l, xmax = x_h, n = n) %*% c_old
#Given cost function
cost <- (a/xt) * ((xt-st)^2)
#Revenue
revenue <- p * (xt-st)
#Profit function
prof <- revenue - cost
#This is the value
v <- prof  + beta * v_pr
return(-v)
}
#Gradient of the value function
grad_valueFunction <- function(st,xt){
grad <- 2 * (a/xt) * (xt-st) - p
return(grad)
}
grad_valueFunction
r <- 0.5
K <- 1
a <- 0.75
p <- 1
z_l <- 0.5
z_h <- 1.5
mu_z <- 1
var_z <- 0.1
beta <- 0.95
#######################################################################
#################    RANDOM SHOCKS    #################################
#######################################################################
n_z <- 15
z_seq <- seq(from=z_l, to=z_h, length.out = n_z)
z <- 0.5 * (z_seq[1:n_z-1] + z_seq[2:n_z])
#Now we get the cdfs of the shocks above
z_cdfs <- ptruncnorm(z_seq,  a=z_l, b=z_h, mean=mu_z, sd = sqrt(var_z))
z_cdfms <- 0.5 * (z_cdfs[1:n_z-1] + z_cdfs[2:n_z])
#We get the probabilities of the shocks
z_probs <- as.matrix(diff(z_cdfs),ncol=1)
x_l <- 0.01
x_h <- 1.7
n <- 10
cheb_nodes <- nodes(xmin = x_l, xmax = x_h, n = n)
phi_mat <- chebychevMatrix(x= cheb_nodes, xmin = x_l, xmax = x_h, n = n)
cheb_nodes
phi_mat
phi_mat
phi_mat
phi_mat
phi_mat
phi_mat
cheb_nodes
x_l <- 0.1
x_h <- 1.7
n <- 10
cheb_nodes <- nodes(xmin = x_l, xmax = x_h, n = n)
cheb_nodes
phi_mat <- chebychevMatrix(x= cheb_nodes, xmin = x_l, xmax = x_h, n = n)
phi_mat
x_l <- 0.01
n <- 10
cheb_nodes <- nodes(xmin = x_l, xmax = x_h, n = n)
phi_mat <- chebychevMatrix(x= cheb_nodes, xmin = x_l, xmax = x_h, n = n)
nodes
cheb_nodes
x_l <- 0.01
x_h <- 1.7
n <- 10
cheb_nodes <- nodes(xmin = x_l, xmax = x_h, n = n)
phi_mat <- chebychevMatrix(x= cheb_nodes, xmin = x_l, xmax = x_h, n = n)
corn_prices
corn
unique(corn$Attribute)
corn_acerage <- corn %>% filter(Attribute=="Planted acreage")
corn_acerage
unique(corn$Attribute)
corn_yield_acre <- corn %>% filter(Attribute == "Yield per harvested acre")
corn_yield_acre
corn_yield_acre_plot <- corn_yield_acre %>% ggplot(aes(x=Year, y=Amount)) + geom_line()
corn_yield_acre_plot
corn_yield_acre_plot <- corn_yield_acre %>% ggplot(aes(x=Year, y=Amount, color = "Magenta")) + geom_line()
corn_yield_acre_plot
corn_yield_acre_plot <- corn_yield_acre %>% ggplot(aes(x=Year, y=Amount, color="gold")) + geom_line()
corn_yield_acre_animated_plot <- corn_yield_acre_plot + geom_point(size=2) + transition_reveal(Year)
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme_light(base_size = 16)
corn_yield_acre_animated_plot <-corn_yield_acre_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Amount))+
labs(x="Year", y="Bushels")+
ggtitle(paste0("Corn yield per harvested acre in the U.S."))
corn_yield_acre_animated_plot <- animate(corn_yield_acre_animated_plot, height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("CornYieldAnimation.gif"))
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Amount, label = Amount))+
labs(x="Year", y="Bushels")+
ggtitle(paste0("Corn yield per harvested acre in the U.S."))
corn_yield_acre_animated_plot <- animate(corn_yield_acre_animated_plot, height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("CornYieldAnimation.gif"))
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme(legend.position="none") +
labs(x="Year", y="Bushels")+
ggtitle(paste0("Corn yield per harvested acre in the U.S."))
corn_yield_acre_animated_plot <- animate(corn_yield_acre_animated_plot, height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("CornYieldAnimation.gif"))
corn_yield_acre_plot <- corn_yield_acre %>% ggplot(aes(x=Year, y=Amount, color="gold")) + geom_line()
corn_yield_acre_animated_plot <- corn_yield_acre_plot + geom_point(size=2) + transition_reveal(Year)
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme_light(base_size = 16)
corn_yield_acre_animated_plot <-corn_yield_acre_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme(legend.position="none") +
labs(x="Year", y="Bushels")+
ggtitle(paste0("Corn yield per harvested acre in the U.S."))
corn_yield_acre_animated_plot <- animate(corn_yield_acre_animated_plot, height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("CornYieldAnimation.gif"))
corn_acerage
install.packages("plot3D")
corn_yield_acre_plot <- corn_yield_acre %>% ggplot(aes(x=Year, y=Amount, color="gold")) + geom_line()
corn_yield_acre_animated_plot <- corn_yield_acre_plot + geom_point(size=2) + transition_reveal(Year)
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme_light(base_size = 16)
corn_yield_acre_animated_plot <-corn_yield_acre_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme(legend.position="none") +
labs(x="Year", y="Bushels")+
ggtitle(paste0("Corn yield per harvested acre in the U.S."))
corn_yield_acre_animated_plot <- animate(corn_yield_acre_animated_plot, height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("CornYieldAnimation.gif"))
corn_yield_acre
corn_yield_acre_plot
corn_yield_acre_plot <- corn_yield_acre %>% ggplot(aes(x=Year, y=Amount, color='gold')) + geom_line()
corn_yield_acre_plot
corn_acerage
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount, color="Blue")) + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount, color=Amount)) + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount)) + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount, color = 'yellogreen')) + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount), color = 'yellogreen') + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount), colour = 'yellogreen') + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount), colour = "yellogreen") + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount), colour = "yellowgreen") + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount), colour = "black") + geom_line()
corn_acerage_plot
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount)) + geom_line(colour = "gold")
corn_acerage_plot
corn_yield_acre_plot <- corn_yield_acre %>% ggplot(aes(x=Year, y=Amount)) + geom_line(colour="goldenrod3")
corn_yield_acre_plot
corn_yield_acre_plot <- corn_yield_acre %>% ggplot(aes(x=Year, y=Amount)) + geom_line(colour="goldenrod3")
corn_yield_acre_animated_plot <- corn_yield_acre_plot + geom_point(size=2) + transition_reveal(Year)
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme_light(base_size = 16)
corn_yield_acre_animated_plot <-corn_yield_acre_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
corn_yield_acre_animated_plot <- corn_yield_acre_animated_plot + theme(legend.position="none") +
labs(x="Year", y="Bushels")+
ggtitle(paste0("Corn yield per harvested acre in the U.S."))
corn_yield_acre_animated_plot <- animate(corn_yield_acre_animated_plot, height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("CornYieldAnimation.gif"))
corn_acerage <- corn %>% filter(Attribute=="Planted acreage")
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount)) + geom_line(colour = "tan4")
corn_acerage_plot
corn_acerage
corn_acerage <- corn %>% filter(Attribute=="Planted acreage")
corn_acerage_plot <- corn_acerage %>% ggplot(aes(x=Year, y = Amount)) + geom_line(colour = "tan4")
corn_acerage_animated_plot <- corn_acerage_plot + geom_point(size=2) + transition_reveal(Year)
corn_acerage_animated_plot <- corn_acerage_animated_plot + theme_light(base_size = 16)
corn_acerage_animated_plot <- corn_acerage_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
corn_acerage_animated_plot <- corn_acerage_animated_plot + theme(legend.position="none") +
labs(x="Year", y="Planted acerage (Million acres)")+
ggtitle(paste0("Corn planted acerage in the U.S."))
corn_acerage_animated_plot <- animate(corn_acerage_animated_plot, height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("CornAcerageAnimation.gif"))
corn_prices
corn_prices_plot <- corn_prices %>% ggplot(aes(x = Year, y = Amount)) + geom_line(colour="springgreen4")
corn_prices_plot
corn_prices <- corn %>% filter(Attribute=="Prices received by farmers")
corn_prices_plot <- corn_prices %>% ggplot(aes(x = Year, y = Amount)) + geom_line(colour="springgreen4")
corn_prices_animated_plot <- corn_prices_plot + geom_point(size=2) + transition_reveal(Year)
corn_prices_animated_plot <- corn_prices_animated_plot + theme_light(base_size = 16)
corn_prices_animated_plot <- corn_prices_animated_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
corn_prices_animated_plot <- corn_prices_animated_plot + theme(legend.position="none") +
labs(x="Year", y="Price (Dollars per bushel)")+
ggtitle(paste0("Corn price received by farmers in the U.S."))
corn_prices_animated_plot <- animate(corn_prices_animated_plot, height = 500, width = 1000,fps=6, start_pause=5, end_pause=20,
renderer = gifski_renderer("CornPriceAnimation.gif"))
allVeggiesAvail_PCC_FarmWeight_plot <- allVeggiesAvail_PCC_FarmWeight_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable))+
labs(x="Year", y="Pounds",title = 'Year: {frame_time}')+
ggtitle(paste0("Vegetable Availability in the U.S.")) + +
transition_time(year) +
ease_aes('linear')
allVeggiesAvail_PCC_FarmWeight_plot <- allVeggiesAvail_PCC_FarmWeight_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable))+
labs(x="Year", y="Pounds",title = 'Year: {frame_time}')+
ggtitle(paste0("Vegetable Availability in the U.S.")) +
transition_time(year) +
ease_aes('linear')
allVeggiesAvail_PCC_FarmWeight_plot <- allVeggiesAvail_PCC_FarmWeight_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable))+
labs(x="Year", y="Pounds",title = 'Year: {frame_time}')+
ggtitle(paste0("Vegetable Availability in the U.S."))
shiny::runApp('AgricultureProduction')
runApp('AgricultureProduction')
runApp('AgricultureProduction')
View(faithful)
runApp('ShinyApp/shiny.R')
runApp('AgricultureProduction')
veggiesPath <- "Data/FoodAvailabilityData/FreshVegetables.xlsx"
allVeggiesAvailability<- lapply(excel_sheets(veggiesPath), read_excel, path = veggiesPath)
allVeggiesAvail_PCC_FarmWeight <- allVeggiesAvailability[[2]]
allVeggiesAvail_PCC_FarmWeight <- allVeggiesAvail_PCC_FarmWeight %>% as.data.frame()
allVeggiesAvail_PCC_FarmWeight <- allVeggiesAvail_PCC_FarmWeight[-(1:2),]
allVeggiesAvail_PCC_FarmWeight <- sapply(allVeggiesAvail_PCC_FarmWeight, as.numeric) %>% as.data.frame()
allVeggiesAvail_PCC_FarmWeight <- round(allVeggiesAvail_PCC_FarmWeight,4)
allVeggiesAvail_PCC_FarmWeight
names(allVeggiesAvail_PCC_FarmWeight)
allVeggiesAvail_PCC_Greens <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, `Collard greens`, Kale, `Lettuce head`,
`Romaine and leaf`, `Mustard greens`, Spinach,
`Turnip greens`)
allVeggiesAvail_PCC_Greens
names(allVeggiesAvail_PCC_Greens) <- c("Year", "Collard Greens", "Kale", "Lettuce Head", "Romaine", "Mustard Greens", "Spinach",
"Turnip Greens")
allVeggiesAvail_PCC_Greens
names(allVeggiesAvail_PCC_FarmWeight)
names(allVeggiesAvail_PCC_Cruciferous) <- c("Year", "Cabbage", "Cauliflower", "Broccoli", "Brussels Sprouts")
allVeggiesAvail_PCC_Cruciferous <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, Cabbage, Cauliflower, Broccoli, `Brussels sprouts`)
names(allVeggiesAvail_PCC_Cruciferous) <- c("Year", "Cabbage", "Cauliflower", "Broccoli", "Brussels Sprouts")
names(allVeggiesAvail_PCC_FarmWeight)
allVeggiesAvail_PCC_Greens <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, `Collard greens`, Kale, `Lettuce head`,
`Romaine and leaf`, `Mustard greens`, Spinach,
`Turnip greens`)
names(allVeggiesAvail_PCC_Greens) <- c("Year", "Collard Greens", "Kale", "Lettuce Head", "Romaine", "Mustard Greens", "Spinach",
"Turnip Greens")
allVeggiesAvail_PCC_Cruciferous <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, Cabbage, Cauliflower, Broccoli, `Brussels sprouts`)
names(allVeggiesAvail_PCC_Cruciferous) <- c("Year", "Cabbage", "Cauliflower", "Broccoli", "Brussels Sprouts")
allVeggiesAvail_PCC_Roots <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, Carrots, Garlic, Onions, Potatoes, Radishes, `Sweet potatoes`)
names(allVeggiesAvail_PCC_Roots) <- c("Year", "Carrots", "Garlic", "Onions", "Potatoes", "Radishes", "Sweet Potatoes")
allVeggiesAvail_PCC_Greens
allVeggiesAvail_PCC_Cruciferous
allVeggiesAvail_PCC_Roots
allVeggiesAvail_PCC_Greens <- allVeggiesAvail_PCC_Greens %>% gather(Vegetable, Availability, -Year)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens %>% ggplot(aes(x=Year, y = Availability, color = Vegetable)) + geom_line()
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + geom_point(size=2) + transition_reveal(Year)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme_light(base_size = 16)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable))+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens_plot <- animate(allVeggiesAvail_PCC_Greens_plot, height = 500, width = 1000,fps=6, start_pause=5,
end_pause=20, renderer = gifski_renderer("VeggiesAvailGreen.gif"))
allVeggiesAvail_PCC_Greens_plot <- animate(allVeggiesAvail_PCC_Greens_plot, nudge_x = 4, height = 500, width = 1000,fps=6, start_pause=5,
end_pause=20, renderer = gifski_renderer("VeggiesAvailGreen.gif"))
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x = 4)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens <- allVeggiesAvail_PCC_Greens %>% gather(Vegetable, Availability, -Year)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens %>% ggplot(aes(x=Year, y = Availability, color = Vegetable)) + geom_line()
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + geom_point(size=2) + transition_reveal(Year)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme_light(base_size = 16)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x = 4)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens_plot <- animate(allVeggiesAvail_PCC_Greens_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20, renderer = gifski_renderer("VeggiesAvailGreen.gif"))
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x = 10, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, `Collard greens`, Kale, `Lettuce head`,
`Romaine and leaf`, `Mustard greens`, Spinach,
`Turnip greens`)
names(allVeggiesAvail_PCC_Greens) <- c("Year", "Collard Greens", "Kale", "Lettuce Head", "Romaine", "Mustard Greens", "Spinach",
"Turnip Greens")
allVeggiesAvail_PCC_Greens <- allVeggiesAvail_PCC_Greens %>% gather(Vegetable, Availability, -Year)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens %>% ggplot(aes(x=Year, y = Availability, color = Vegetable)) + geom_line()
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + geom_point(size=2) + transition_reveal(Year)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme_light(base_size = 16)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x = 10, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens_plot <- animate(allVeggiesAvail_PCC_Greens_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20, renderer = gifski_renderer("VeggiesAvailGreen.gif"))
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x = 3, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, `Collard greens`, Kale, `Lettuce head`,
`Romaine and leaf`, `Mustard greens`, Spinach,
`Turnip greens`)
names(allVeggiesAvail_PCC_Greens) <- c("Year", "Collard Greens", "Kale", "Lettuce Head", "Romaine", "Mustard Greens", "Spinach",
"Turnip Greens")
allVeggiesAvail_PCC_Greens <- allVeggiesAvail_PCC_Greens %>% gather(Vegetable, Availability, -Year)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens %>% ggplot(aes(x=Year, y = Availability, color = Vegetable)) + geom_line()
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + geom_point(size=2) + transition_reveal(Year)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme_light(base_size = 16)
allVeggiesAvail_PCC_Greens_plot <- allVeggiesAvail_PCC_Greens_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
allVeggiesAvail_PCC_Greens_Animated_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x = 3, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens_Animated_plot <- animate(allVeggiesAvail_PCC_Greens_Animated_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20, renderer = gifski_renderer("VeggiesAvailGreen.gif"))
allVeggiesAvail_PCC_Greens_Animated_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x = 2, size=2, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens_Animated_plot <- animate(allVeggiesAvail_PCC_Greens_Animated_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20, renderer = gifski_renderer("VeggiesAvailGreen.gif"))
allVeggiesAvail_PCC_Greens_Animated_plot <- allVeggiesAvail_PCC_Greens_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x =1, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Leafy Greens Availability in the U.S."))
allVeggiesAvail_PCC_Greens_Animated_plot <- animate(allVeggiesAvail_PCC_Greens_Animated_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20, renderer = gifski_renderer("VeggiesAvailGreen.gif"))
allVeggiesAvail_PCC_Cruciferous <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, Cabbage, Cauliflower, Broccoli, `Brussels sprouts`)
names(allVeggiesAvail_PCC_Cruciferous) <- c("Year", "Cabbage", "Cauliflower", "Broccoli", "Brussels Sprouts")
allVeggiesAvail_PCC_Cruciferous <- allVeggiesAvail_PCC_Cruciferous %>% gather(Vegetable, Availability, -Year)
allVeggiesAvail_PCC_Cruciferous_plot <- allVeggiesAvail_PCC_Cruciferous %>% ggplot(aes(x=Year, y = Availability, color = Vegetable)) + geom_line()
allVeggiesAvail_PCC_Cruciferous_plot <- allVeggiesAvail_PCC_Cruciferous_plot + geom_point(size=2) + transition_reveal(Year)
allVeggiesAvail_PCC_Cruciferous_plot <- allVeggiesAvail_PCC_Cruciferous_plot + theme_light(base_size = 16)
allVeggiesAvail_PCC_Cruciferous_plot <- allVeggiesAvail_PCC_Cruciferous_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
allVeggiesAvail_PCC_Cruciferous_Animated_plot <- allVeggiesAvail_PCC_Cruciferous_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x =1, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Cruciferous Vegetables Availability in the U.S."))
allVeggiesAvail_PCC_Cruciferous_Animated_plot <- animate(allVeggiesAvail_PCC_Cruciferous_Animated_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20,
renderer = gifski_renderer("VeggiesAvailCruciferous.gif"))
allVeggiesAvail_PCC_Roots <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, Carrots, Garlic, Onions, Potatoes, Radishes, `Sweet potatoes`)
names(allVeggiesAvail_PCC_Roots) <- c("Year", "Carrots", "Garlic", "Onions", "Potatoes", "Radishes", "Sweet Potatoes")
allVeggiesAvail_PCC_Roots <- allVeggiesAvail_PCC_Roots %>% gather(Vegetable, Availability, -Year)
allVeggiesAvail_PCC_Roots_plot <- allVeggiesAvail_PCC_Roots %>% ggplot(aes(x=Year, y = Availability, color = Vegetable)) + geom_line()
allVeggiesAvail_PCC_Roots_plot <- allVeggiesAvail_PCC_Roots_plot + geom_point(size=2) + transition_reveal(Year)
allVeggiesAvail_PCC_Roots_plot <- allVeggiesAvail_PCC_Roots_plot + theme_light(base_size = 16)
allVeggiesAvail_PCC_Roots_plot <- allVeggiesAvail_PCC_Roots_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
allVeggiesAvail_PCC_Roots_Animated_plot <- allVeggiesAvail_PCC_Roots_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x =1, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Roots Availability in the U.S."))
allVeggiesAvail_PCC_Roots_Animated_plot <- animate(allVeggiesAvail_PCC_Roots_Animated_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20,
renderer = gifski_renderer("VeggiesAvailCruciferous.gif"))
allVeggiesAvail_PCC_Cruciferous_Animated_plot <- animate(allVeggiesAvail_PCC_Cruciferous_Animated_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20,
renderer = gifski_renderer("VeggiesAvailCruciferous.gif"))
allVeggiesAvail_PCC_Cruciferous_Animated_plot <- allVeggiesAvail_PCC_Cruciferous_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x =1, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Cruciferous Vegetables Availability in the U.S."))
allVeggiesAvail_PCC_Cruciferous_Animated_plot <- animate(allVeggiesAvail_PCC_Cruciferous_Animated_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20,
renderer = gifski_renderer("VeggiesAvailCruciferous.gif"))
allVeggiesAvail_PCC_Roots <- allVeggiesAvail_PCC_FarmWeight %>% select(Year, Carrots, Garlic, Onions, Potatoes, Radishes, `Sweet potatoes`)
names(allVeggiesAvail_PCC_Roots) <- c("Year", "Carrots", "Garlic", "Onions", "Potatoes", "Radishes", "Sweet Potatoes")
allVeggiesAvail_PCC_Roots <- allVeggiesAvail_PCC_Roots %>% gather(Vegetable, Availability, -Year)
allVeggiesAvail_PCC_Roots_plot <- allVeggiesAvail_PCC_Roots %>% ggplot(aes(x=Year, y = Availability, color = Vegetable)) + geom_line()
allVeggiesAvail_PCC_Roots_plot <- allVeggiesAvail_PCC_Roots_plot + geom_point(size=2) + transition_reveal(Year)
allVeggiesAvail_PCC_Roots_plot <- allVeggiesAvail_PCC_Roots_plot + theme_light(base_size = 16)
allVeggiesAvail_PCC_Roots_plot <- allVeggiesAvail_PCC_Roots_plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
allVeggiesAvail_PCC_Roots_Animated_plot <- allVeggiesAvail_PCC_Roots_plot + theme(legend.position="none") +
geom_label(aes(x = Year, y=Availability, label=Vegetable), nudge_x =1, size=4, hjust=0)+
labs(x="Year", y="Pounds")+
ggtitle(paste0("Percapita Roots Availability in the U.S."))
allVeggiesAvail_PCC_Roots_Animated_plot <- animate(allVeggiesAvail_PCC_Roots_Animated_plot, height = 500, width = 1000,fps=6,
start_pause=5, end_pause=20,
renderer = gifski_renderer("VeggiesAvailRoots.gif"))
